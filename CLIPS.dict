"(deffunction randomName"
"(deffunction randomName)"
")"
"(if"
"(if)"
"(bind"
"(bind}"
"(and)"
"(or)"
"(while)"
"then "
"?answer"
"not"
"(not"
"else"
"yes-or-no-p"
"assert"
"=>"
"(defrule randomRule)"
"(defrule"
"(defrule)"
"!="
"*"
"**"
"+"
"-"
"/"
"<"
"<="
"<>"
"="
">"
">="
"abs"
"acos"
"acosh"
"acot"
"acoth"
"acsc"
"acsch"
"active-duplicate-instance"
"active-initialize-instance"
"active-make-instance"
"active-message-duplicate-instance"
"active-message-modify-instance"
"active-modify-instance"
"agenda"
"and"
"any-instancep"
"apropos"
"asec"
"asech"
"asin"
"asinh"
"assert"
"assert-string"
"atan"
"atanh"
"batch"
"batch*"
"bind"
"bload"
"bload-instances"
"break"
"browse-classes"
"bsave"
"bsave-instances"
"build"
"call-next-handler"
"call-next-method"
"call-specific-method"
"class"
"class-abstractp"
"class-existp"
"class-reactivep"
"class-slots"
"class-subclasses"
"class-superclasses"
"clear"
"clear-focus-stack"
"close"
"conserve-mem"
"constructs-to-c"
"cos"
"cosh"
"cot"
"coth"
"create$"
"csc"
"csch"
"defclass-module"
"deffacts-module"
"deffunction-module"
"defgeneric-module"
"defglobal-module"
"definstances-module"
"defrule-module"
"deftemplate-module"
"deg-grad"
"deg-rad"
"delayed-do-for-all-instances"
"delete$"
"delete-instance"
"dependencies"
"dependents"
"describe-class"
"direct-mv-delete"
"direct-mv-insert"
"direct-mv-replace"
"div"
"do-for-all-instances"
"do-for-instance"
"dribble-off"
"dribble-on"
"duplicate"
"duplicate-instance"
"duplicate-instance"
"dynamic-get"
"dynamic-put"
"edit"
"eq"
"eval"
"evenp"
"exit"
"exp"
"expand$"
"explode$"
"fact-existp"
"394"
"fact-index"
"fact-relation"
"fact-slot-names"
"fact-slot-value"
"facts"
"fetch"
"find-all-instances"
"find-instance"
"first$"
"float"
"floatp"
"focus"
"format"
"gensym"
"gensym*"
"get"
"get-auto-float-dividend"
"get-current-module"
"get-defclass-list"
"get-deffacts-list"
"get-deffunction-list"
"get-defgeneric-list"
"get-defglobal-list"
"get-definstances-list"
"get-defmessage-handler-list"
"get-defmethod-list"
"get-defmodule-list"
"get-defrule-list"
"get-deftemplate-list"
"get-dynamic-constraint-checking"
"get-fact-duplication"
"get-fact-list"
"get-focus"
"get-focus-stack"
"get-function-restrictions"
"get-incremental-reset"
"get-method-restrictions"
"get-reset-globals"
"get-salience-evaluation"
"get-sequence-operator-recognition"
"get-static-constraint-checking"
"get-strategy"
"grad-deg"
"halt"
"if"
"implode$"
"init-slots"
"initialize-instance"
"initialize-instance"
"insert$"
"instance-address"
"instance-addressp"
"instance-existp"
"instance-name"
"instance-name-to-symbol"
"instance-namep"
"instancep"
"instances"
"integer"
"integerp"
"length"
"length$"
"lexemep"
"list-defclasses"
"list-deffacts"
"list-deffunctions"
"list-defgenerics"
"list-defglobals"
"list-definstances"
"list-defmessage-handlers"
"list-defmethods"
"list-defmodules"
"list-defrules"
"list-deftemplates"
"list-focus-stack"
"list-watch-items"
"load"
"load*"
"load-facts"
"load-instances"
"log"
"log10"
"loop-for-count"
"lowcase"
"make-instance"
"matches"
"max"
"mem-requests"
"mem-used"
"member"
"member$"
"message-duplicate-instance"
"message-duplicate-instance"
"message-handler-existp"
"message-modify-instance"
"message-modify-instance"
"min"
"mod"
"modify"
"modify-instance"
"modify-instance"
"multifieldp"
"mv-append"
"mv-delete"
"mv-replace"
"mv-slot-delete"
"mv-slot-insert"
"mv-slot-replace"
"mv-subseq"
"neq"
"next-handlerp"
"next-methodp"
"not"
"nth"
"nth$"
"numberp"
"object-pattern-match-delay"
"oddp"
"open"
"options"
"or"
"override-next-handler"
"override-next-method"
"pi"
"pointerp"
"pop-focus"
"ppdefclass"
"ppdeffacts"
"ppdeffunction"
"ppdefgeneric"
"ppdefglobal"
"ppdefinstances"
"ppdefmessage-handler"
"ppdefmethod"
"ppdefmodule"
"ppdefrule"
"ppdeftemplate"
"ppinstance"
"preview-generic"
"preview-send"
"primitives-info"
"print-region"
"printout"
"progn"
"progn$"
"put"
"rad-deg"
"random"
"read"
"readline"
"refresh"
"refresh-agenda"
"release-mem"
"remove"
"remove-break"
"rename"
"replace$"
"reset"
"rest$"
"restore-instances"
"retract"
"return"
"round"
"rule-complexity"
"rules"
"run"
"save"
"save-facts"
"save-instances"
"396"
"sec"
"sech"
"seed"
"send"
"sequencep"
"set-auto-float-dividend"
"set-break"
"set-current-module"
"set-dynamic-constraint-checking"
"set-fact-duplication"
"set-incremental-reset"
"set-reset-globals"
"set-salience-evaluation"
"set-sequence-operator-recognition"
"set-static-constraint-checking"
"set-strategy"
"setgen"
"show-breaks"
"show-defglobals"
"show-fht"
"show-fpn"
"show-joins"
"show-opn"
"sin"
"sinh"
"slot-allowed-values"
"slot-cardinality"
"slot-delete$"
"slot-direct-accessp"
"slot-direct-delete$"
"slot-direct-insert$"
"slot-direct-replace$"
"slot-existp"
"slot-facets"
"slot-initablep"
"slot-insert$"
"slot-publicp"
"slot-range"
"slot-replace$"
"slot-sources"
"slot-types"
"slot-writablep"
"sqrt"
"str-assert"
"str-cat"
"str-compare"
"str-explode"
"str-implode"
"str-index"
"str-length"
"stringp"
"sub-string"
"subclassp"
"subseq$"
"subset"
"subsetp"
"superclassp"
"switch"
"sym-cat"
"symbol-to-instance-name"
"symbolp"
"system"
"tan"
"tanh"
"time"
"toss"
"type"
"type"
"undefclass"
"undeffacts"
"undeffunction"
"undefgeneric"
"undefglobal"
"undefinstances"
"undefmessage-handler"
"undefmethod"
"undefrule"
"undeftemplate"
"unmake-instance"
"unwatch"
"upcase"
"watch"
"while"
"wordp"
"(!="
"(*"
"(**"
"(+"
"(-"
"(/"
"(<"
"(<="
"(<>"
"(="
"(>"
"(>="
"(abs"
"(acos"
"(acosh"
"(acot"
"(acoth"
"(acsc"
"(acsch"
"(active-duplicate-instance"
"(active-initialize-instance"
"(active-make-instance"
"(active-message-duplicate-instance"
"(active-message-modify-instance"
"(active-modify-instance"
"(agenda"
"(and"
"(any-instancep"
"(apropos"
"(asec"
"(asech"
"(asin"
"(asinh"
"(assert"
"(assert-string"
"(atan"
"(atanh"
"(batch"
"(batch*"
"(bind"
"(bload"
"(bload-instances"
"(break"
"(browse-classes"
"(bsave"
"(bsave-instances"
"(build"
"(call-next-handler"
"(call-next-method"
"(call-specific-method"
"(class"
"(class-abstractp"
"(class-existp"
"(class-reactivep"
"(class-slots"
"(class-subclasses"
"(class-superclasses"
"(clear"
"(clear-focus-stack"
"(close"
"(conserve-mem"
"(constructs-to-c"
"(cos"
"(cosh"
"(cot"
"(coth"
"(create$"
"(csc"
"(csch"
"(defclass-module"
"(deffacts-module"
"(deffunction-module"
"(defgeneric-module"
"(defglobal-module"
"(definstances-module"
"(defrule-module"
"(deftemplate-module"
"(deg-grad"
"(deg-rad"
"(delayed-do-for-all-instances"
"(delete$"
"(delete-instance"
"(dependencies"
"(dependents"
"(describe-class"
"(direct-mv-delete"
"(direct-mv-insert"
"(direct-mv-replace"
"(div"
"(do-for-all-instances"
"(do-for-instance"
"(dribble-off"
"(dribble-on"
"(duplicate"
"(duplicate-instance"
"(duplicate-instance"
"(dynamic-get"
"(dynamic-put"
"(edit"
"(eq"
"(eval"
"(evenp"
"(exit"
"(exp"
"(expand$"
"(explode$"
"(fact-existp"
"(394"
"(fact-index"
"(fact-relation"
"(fact-slot-names"
"(fact-slot-value"
"(facts"
"(fetch"
"(find-all-instances"
"(find-instance"
"(first$"
"(float"
"(floatp"
"(focus"
"(format"
"(gensym"
"(gensym*"
"(get"
"(get-auto-float-dividend"
"(get-current-module"
"(get-defclass-list"
"(get-deffacts-list"
"(get-deffunction-list"
"(get-defgeneric-list"
"(get-defglobal-list"
"(get-definstances-list"
"(get-defmessage-handler-list"
"(get-defmethod-list"
"(get-defmodule-list"
"(get-defrule-list"
"(get-deftemplate-list"
"(get-dynamic-constraint-checking"
"(get-fact-duplication"
"(get-fact-list"
"(get-focus"
"(get-focus-stack"
"(get-function-restrictions"
"(get-incremental-reset"
"(get-method-restrictions"
"(get-reset-globals"
"(get-salience-evaluation"
"(get-sequence-operator-recognition"
"(get-static-constraint-checking"
"(get-strategy"
"(grad-deg"
"(halt"
"(if"
"(implode$"
"(init-slots"
"(initialize-instance"
"(initialize-instance"
"(insert$"
"(instance-address"
"(instance-addressp"
"(instance-existp"
"(instance-name"
"(instance-name-to-symbol"
"(instance-namep"
"(instancep"
"(instances"
"(integer"
"(integerp"
"(length"
"(length$"
"(lexemep"
"(list-defclasses"
"(list-deffacts"
"(list-deffunctions"
"(list-defgenerics"
"(list-defglobals"
"(list-definstances"
"(list-defmessage-handlers"
"(list-defmethods"
"(list-defmodules"
"(list-defrules"
"(list-deftemplates"
"(list-focus-stack"
"(list-watch-items"
"(load"
"(load*"
"(load-facts"
"(load-instances"
"(log"
"(log10"
"(loop-for-count"
"(lowcase"
"(make-instance"
"(matches"
"(max"
"(mem-requests"
"(mem-used"
"(member"
"(member$"
"(message-duplicate-instance"
"(message-duplicate-instance"
"(message-handler-existp"
"(message-modify-instance"
"(message-modify-instance"
"(min"
"(mod"
"(modify"
"(modify-instance"
"(modify-instance"
"(multifieldp"
"(mv-append"
"(mv-delete"
"(mv-replace"
"(mv-slot-delete"
"(mv-slot-insert"
"(mv-slot-replace"
"(mv-subseq"
"(neq"
"(next-handlerp"
"(next-methodp"
"(not"
"(nth"
"(nth$"
"(numberp"
"(object-pattern-match-delay"
"(oddp"
"(open"
"(options"
"(or"
"(override-next-handler"
"(override-next-method"
"(pi"
"(pointerp"
"(pop-focus"
"(ppdefclass"
"(ppdeffacts"
"(ppdeffunction"
"(ppdefgeneric"
"(ppdefglobal"
"(ppdefinstances"
"(ppdefmessage-handler"
"(ppdefmethod"
"(ppdefmodule"
"(ppdefrule"
"(ppdeftemplate"
"(ppinstance"
"(preview-generic"
"(preview-send"
"(primitives-info"
"(print-region"
"(printout"
"(progn"
"(progn$"
"(put"
"(rad-deg"
"(random"
"(read"
"(readline"
"(refresh"
"(refresh-agenda"
"(release-mem"
"(remove"
"(remove-break"
"(rename"
"(replace$"
"(reset"
"(rest$"
"(restore-instances"
"(retract"
"(return"
"(round"
"(rule-complexity"
"(rules"
"(run"
"(save"
"(save-facts"
"(save-instances"
"(396"
"(sec"
"(sech"
"(seed"
"(send"
"(sequencep"
"(set-auto-float-dividend"
"(set-break"
"(set-current-module"
"(set-dynamic-constraint-checking"
"(set-fact-duplication"
"(set-incremental-reset"
"(set-reset-globals"
"(set-salience-evaluation"
"(set-sequence-operator-recognition"
"(set-static-constraint-checking"
"(set-strategy"
"(setgen"
"(show-breaks"
"(show-defglobals"
"(show-fht"
"(show-fpn"
"(show-joins"
"(show-opn"
"(sin"
"(sinh"
"(slot-allowed-values"
"(slot-cardinality"
"(slot-delete$"
"(slot-direct-accessp"
"(slot-direct-delete$"
"(slot-direct-insert$"
"(slot-direct-replace$"
"(slot-existp"
"(slot-facets"
"(slot-initablep"
"(slot-insert$"
"(slot-publicp"
"(slot-range"
"(slot-replace$"
"(slot-sources"
"(slot-types"
"(slot-writablep"
"(sqrt"
"(str-assert"
"(str-cat"
"(str-compare"
"(str-explode"
"(str-implode"
"(str-index"
"(str-length"
"(stringp"
"(sub-string"
"(subclassp"
"(subseq$"
"(subset"
"(subsetp"
"(superclassp"
"(switch"
"(sym-cat"
"(symbol-to-instance-name"
"(symbolp"
"(system"
"(tan"
"(tanh"
"(time"
"(toss"
"(type"
"(type"
"(undefclass"
"(undeffacts"
"(undeffunction"
"(undefgeneric"
"(undefglobal"
"(undefinstances"
"(undefmessage-handler"
"(undefmethod"
"(undefrule"
"(undeftemplate"
"(unmake-instance"
"(unwatch"
"(upcase"
"(watch"
"(while"
"(wordp"
"(!= )"
"(* )"
"(** )"
"(+ )"
"(- )"
"(/ )"
"(< )"
"(<= )"
"(<> )"
"(= )"
"(> )"
"(>= )"
"(abs )"
"(acos )"
"(acosh )"
"(acot )"
"(acoth )"
"(acsc )"
"(acsch )"
"(active-duplicate-instance )"
"(active-initialize-instance )"
"(active-make-instance )"
"(active-message-duplicate-instance )"
"(active-message-modify-instance )"
"(active-modify-instance )"
"(agenda )"
"(and )"
"(any-instancep )"
"(apropos )"
"(asec )"
"(asech )"
"(asin )"
"(asinh )"
"(assert )"
"(assert-string )"
"(atan )"
"(atanh )"
"(batch )"
"(batch* )"
"(bind )"
"(bload )"
"(bload-instances )"
"(break )"
"(browse-classes )"
"(bsave )"
"(bsave-instances )"
"(build )"
"(call-next-handler )"
"(call-next-method )"
"(call-specific-method )"
"(class )"
"(class-abstractp )"
"(class-existp )"
"(class-reactivep )"
"(class-slots )"
"(class-subclasses )"
"(class-superclasses )"
"(clear )"
"(clear-focus-stack )"
"(close )"
"(conserve-mem )"
"(constructs-to-c )"
"(cos )"
"(cosh )"
"(cot )"
"(coth )"
"(create$ )"
"(csc )"
"(csch )"
"(defclass-module )"
"(deffacts-module )"
"(deffunction-module )"
"(defgeneric-module )"
"(defglobal-module )"
"(definstances-module )"
"(defrule-module )"
"(deftemplate-module )"
"(deg-grad )"
"(deg-rad )"
"(delayed-do-for-all-instances )"
"(delete$ )"
"(delete-instance )"
"(dependencies )"
"(dependents )"
"(describe-class )"
"(direct-mv-delete )"
"(direct-mv-insert )"
"(direct-mv-replace )"
"(div )"
"(do-for-all-instances )"
"(do-for-instance )"
"(dribble-off )"
"(dribble-on )"
"(duplicate )"
"(duplicate-instance )"
"(duplicate-instance )"
"(dynamic-get )"
"(dynamic-put )"
"(edit )"
"(eq )"
"(eval )"
"(evenp )"
"(exit )"
"(exp )"
"(expand$ )"
"(explode$ )"
"(fact-existp )"
"(394 )"
"(fact-index )"
"(fact-relation )"
"(fact-slot-names )"
"(fact-slot-value )"
"(facts )"
"(fetch )"
"(find-all-instances )"
"(find-instance )"
"(first$ )"
"(float )"
"(floatp )"
"(focus )"
"(format )"
"(gensym )"
"(gensym* )"
"(get )"
"(get-auto-float-dividend )"
"(get-current-module )"
"(get-defclass-list )"
"(get-deffacts-list )"
"(get-deffunction-list )"
"(get-defgeneric-list )"
"(get-defglobal-list )"
"(get-definstances-list )"
"(get-defmessage-handler-list )"
"(get-defmethod-list )"
"(get-defmodule-list )"
"(get-defrule-list )"
"(get-deftemplate-list )"
"(get-dynamic-constraint-checking )"
"(get-fact-duplication )"
"(get-fact-list )"
"(get-focus )"
"(get-focus-stack )"
"(get-function-restrictions )"
"(get-incremental-reset )"
"(get-method-restrictions )"
"(get-reset-globals )"
"(get-salience-evaluation )"
"(get-sequence-operator-recognition )"
"(get-static-constraint-checking )"
"(get-strategy )"
"(grad-deg )"
"(halt )"
"(if )"
"(implode$ )"
"(init-slots )"
"(initialize-instance )"
"(initialize-instance )"
"(insert$ )"
"(instance-address )"
"(instance-addressp )"
"(instance-existp )"
"(instance-name )"
"(instance-name-to-symbol )"
"(instance-namep )"
"(instancep )"
"(instances )"
"(integer )"
"(integerp )"
"(length )"
"(length$ )"
"(lexemep )"
"(list-defclasses )"
"(list-deffacts )"
"(list-deffunctions )"
"(list-defgenerics )"
"(list-defglobals )"
"(list-definstances )"
"(list-defmessage-handlers )"
"(list-defmethods )"
"(list-defmodules )"
"(list-defrules )"
"(list-deftemplates )"
"(list-focus-stack )"
"(list-watch-items )"
"(load )"
"(load* )"
"(load-facts )"
"(load-instances )"
"(log )"
"(log10 )"
"(loop-for-count )"
"(lowcase )"
"(make-instance )"
"(matches )"
"(max )"
"(mem-requests )"
"(mem-used )"
"(member )"
"(member$ )"
"(message-duplicate-instance )"
"(message-duplicate-instance )"
"(message-handler-existp )"
"(message-modify-instance )"
"(message-modify-instance )"
"(min )"
"(mod )"
"(modify )"
"(modify-instance )"
"(modify-instance )"
"(multifieldp )"
"(mv-append )"
"(mv-delete )"
"(mv-replace )"
"(mv-slot-delete )"
"(mv-slot-insert )"
"(mv-slot-replace )"
"(mv-subseq )"
"(neq )"
"(next-handlerp )"
"(next-methodp )"
"(not )"
"(nth )"
"(nth$ )"
"(numberp )"
"(object-pattern-match-delay )"
"(oddp )"
"(open )"
"(options )"
"(or )"
"(override-next-handler )"
"(override-next-method )"
"(pi )"
"(pointerp )"
"(pop-focus )"
"(ppdefclass )"
"(ppdeffacts )"
"(ppdeffunction )"
"(ppdefgeneric )"
"(ppdefglobal )"
"(ppdefinstances )"
"(ppdefmessage-handler )"
"(ppdefmethod )"
"(ppdefmodule )"
"(ppdefrule )"
"(ppdeftemplate )"
"(ppinstance )"
"(preview-generic )"
"(preview-send )"
"(primitives-info )"
"(print-region )"
"(printout )"
"(progn )"
"(progn$ )"
"(put )"
"(rad-deg )"
"(random )"
"(read )"
"(readline )"
"(refresh )"
"(refresh-agenda )"
"(release-mem )"
"(remove )"
"(remove-break )"
"(rename )"
"(replace$ )"
"(reset )"
"(rest$ )"
"(restore-instances )"
"(retract )"
"(return )"
"(round )"
"(rule-complexity )"
"(rules )"
"(run )"
"(save )"
"(save-facts )"
"(save-instances )"
"(396 )"
"(sec )"
"(sech )"
"(seed )"
"(send )"
"(sequencep )"
"(set-auto-float-dividend )"
"(set-break )"
"(set-current-module )"
"(set-dynamic-constraint-checking )"
"(set-fact-duplication )"
"(set-incremental-reset )"
"(set-reset-globals )"
"(set-salience-evaluation )"
"(set-sequence-operator-recognition )"
"(set-static-constraint-checking )"
"(set-strategy )"
"(setgen )"
"(show-breaks )"
"(show-defglobals )"
"(show-fht )"
"(show-fpn )"
"(show-joins )"
"(show-opn )"
"(sin )"
"(sinh )"
"(slot-allowed-values )"
"(slot-cardinality )"
"(slot-delete$ )"
"(slot-direct-accessp )"
"(slot-direct-delete$ )"
"(slot-direct-insert$ )"
"(slot-direct-replace$ )"
"(slot-existp )"
"(slot-facets )"
"(slot-initablep )"
"(slot-insert$ )"
"(slot-publicp )"
"(slot-range )"
"(slot-replace$ )"
"(slot-sources )"
"(slot-types )"
"(slot-writablep )"
"(sqrt )"
"(str-assert )"
"(str-cat )"
"(str-compare )"
"(str-explode )"
"(str-implode )"
"(str-index )"
"(str-length )"
"(stringp )"
"(sub-string )"
"(subclassp )"
"(subseq$ )"
"(subset )"
"(subsetp )"
"(superclassp )"
"(switch )"
"(sym-cat )"
"(symbol-to-instance-name )"
"(symbolp )"
"(system )"
"(tan )"
"(tanh )"
"(time )"
"(toss )"
"(type )"
"(type )"
"(undefclass )"
"(undeffacts )"
"(undeffunction )"
"(undefgeneric )"
"(undefglobal )"
"(undefinstances )"
"(undefmessage-handler )"
"(undefmethod )"
"(undefrule )"
"(undeftemplate )"
"(unmake-instance )"
"(unwatch )"
"(upcase )"
"(watch )"
"(while )"
"(wordp )"